import asyncio
import re
from datetime import datetime
from aiogram import types, Dispatcher
import time
from assets.antispam import admin_only
from commands.admin import keyboards as kb
from commands.admin import db
from bot import bot


@admin_only()
async def sql(message: types.Message):
    res = await db.zap_sql(message.text[message.text.find(' '):])
    bot_msg = await message.answer(f'üïò –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞...')
    if not res:
        await bot_msg.edit_text(f"üöÄ SQL –ó–∞–ø—Ä–æ—Å –≤—ã–ø–æ–ª–Ω–µ–Ω.")
    else:
        await bot_msg.edit_text(f"‚ùå –í–æ–∑–Ω–∏–∫–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏\n‚ö†Ô∏è –û—à–∏–±–∫–∞: {res}")
        
        
@admin_only()
async def ban(message: types.Message):
    try:
        user_id, time_str, *reason = message.get_args().split()
        time_s = sum(int(value) * {'–¥': 86400, '—á': 3600, '–º': 60}[unit] for value, unit in re.findall(r'(\d+)([–¥—á–º])', time_str))
        time_s = int(time.time()) + time_s
        reason = ' '.join(reason) if reason else '–ù–µ —É–∫–∞–∑–∞–Ω–∞'
    except:
        await message.reply("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /banb [–∏–≥—Ä–æ–≤–æ–π id] [–≤—Ä–µ–º—è] [–ø—Ä–∏—á–∏–Ω–∞]")
        return
    
    await db.new_ban(user_id, time_s, reason)
    await message.answer(f'üìõ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω –Ω–∞ {time_str}\n–ü—Ä–∏—á–∏–Ω–∞: <i>{reason}</i>')


@admin_only()
async def unban(message: types.Message):
    try:
        user_id = int(message.text.split()[1])
    except:
        await message.reply("–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /unbanb [–∏–≥—Ä–æ–≤–æ–π id]")
        return
    
    await db.unban_user(user_id)
    await message.answer(f'üõ° –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} —Ä–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω.')


def reg(dp: Dispatcher):
    dp.register_message_handler(sql, lambda message: message.text.lower().startswith('/sql'))
    dp.register_message_handler(ban, lambda message: message.text.lower().startswith('/banb'))
    dp.register_message_handler(unban, lambda message: message.text.lower().startswith('/unbanb'))